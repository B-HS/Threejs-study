/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 untitled.glb --types
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        tree: THREE.Mesh;
        tree001: THREE.Mesh;
        tree002: THREE.Mesh;
        tree003: THREE.Mesh;
        tree004: THREE.Mesh;
        tree005: THREE.Mesh;
        tree006: THREE.Mesh;
        tree007: THREE.Mesh;
        tree008: THREE.Mesh;
        tree009: THREE.Mesh;
        tree010: THREE.Mesh;
        tree011: THREE.Mesh;
        Cube: THREE.Mesh;
        큐브: THREE.Mesh;
        큐브001: THREE.Mesh;
        큐브002: THREE.Mesh;
        큐브003: THREE.Mesh;
        큐브004: THREE.Mesh;
        큐브005: THREE.Mesh;
        큐브006: THREE.Mesh;
        큐브007: THREE.Mesh;
        큐브008: THREE.Mesh;
        큐브009: THREE.Mesh;
        큐브010: THREE.Mesh;
        큐브011: THREE.Mesh;
        큐브012: THREE.Mesh;
        큐브013: THREE.Mesh;
        큐브014: THREE.Mesh;
        큐브015: THREE.Mesh;
    };
    materials: {
        Material: THREE.MeshStandardMaterial;
    };
};

export function Model(props: JSX.IntrinsicElements["group"]) {
    const { nodes, materials } = useGLTF("/untitled.glb") as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh geometry={nodes.tree.geometry} material={nodes.tree.material} position={[-5.8, 0.5, 0]} scale={1.69} />
            <mesh geometry={nodes.tree001.geometry} material={nodes.tree001.material} position={[-5.8, 0.5, 26.72]} scale={1.69} />
            <mesh geometry={nodes.tree002.geometry} material={nodes.tree002.material} position={[-5.8, 0.5, 53.43]} scale={1.69} />
            <mesh geometry={nodes.tree003.geometry} material={nodes.tree003.material} position={[-5.8, 0.5, 80.15]} scale={1.69} />
            <mesh geometry={nodes.tree004.geometry} material={nodes.tree004.material} position={[-5.8, 0.5, 106.87]} scale={1.69} />
            <mesh geometry={nodes.tree005.geometry} material={nodes.tree005.material} position={[-5.8, 0.5, 133.58]} scale={1.69} />
            <mesh geometry={nodes.tree006.geometry} material={nodes.tree006.material} position={[-96.91, 0.5, 0]} scale={1.69} />
            <mesh geometry={nodes.tree007.geometry} material={nodes.tree007.material} position={[-96.91, 0.5, 26.72]} scale={1.69} />
            <mesh geometry={nodes.tree008.geometry} material={nodes.tree008.material} position={[-96.91, 0.5, 53.43]} scale={1.69} />
            <mesh geometry={nodes.tree009.geometry} material={nodes.tree009.material} position={[-96.91, 0.5, 80.15]} scale={1.69} />
            <mesh geometry={nodes.tree010.geometry} material={nodes.tree010.material} position={[-96.91, 0.5, 106.87]} scale={1.69} />
            <mesh geometry={nodes.tree011.geometry} material={nodes.tree011.material} position={[-96.91, 0.5, 133.58]} scale={1.69} />
            <mesh geometry={nodes.Cube.geometry} material={materials.Material} scale={[200, 0.5, 200]} />
            <mesh geometry={nodes.큐브.geometry} material={nodes.큐브.material} position={[141.26, 100.5, -157.83]} scale={[25, 100, 25]} />
            <mesh geometry={nodes.큐브001.geometry} material={nodes.큐브001.material} position={[141.26, 60.5, -83.83]} scale={[25, 60, 25]} />
            <mesh geometry={nodes.큐브002.geometry} material={nodes.큐브002.material} position={[67.26, 60.5, -83.83]} scale={[25, 60, 25]} />
            <mesh geometry={nodes.큐브003.geometry} material={nodes.큐브003.material} position={[93.26, 1, 0]} />
            <mesh geometry={nodes.큐브004.geometry} material={nodes.큐브004.material} position={[141.26, 60.5, -21.83]} scale={[25, 60, 25]} />
            <mesh geometry={nodes.큐브005.geometry} material={nodes.큐브005.material} position={[67.26, 60.5, -21.83]} scale={[25, 60, 25]} />
            <mesh geometry={nodes.큐브006.geometry} material={nodes.큐브006.material} position={[-187.5, 17.37, -71.33]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브007.geometry} material={nodes.큐브007.material} position={[-157.5, 17.37, -71.33]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브008.geometry} material={nodes.큐브008.material} position={[-127.5, 17.37, -71.33]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브009.geometry} material={nodes.큐브009.material} position={[-97.5, 17.37, -71.33]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브010.geometry} material={nodes.큐브010.material} position={[-187.5, 17.37, -93.83]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브011.geometry} material={nodes.큐브011.material} position={[-157.5, 17.37, -93.83]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브012.geometry} material={nodes.큐브012.material} position={[-127.5, 17.37, -93.83]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브013.geometry} material={nodes.큐브013.material} position={[-97.5, 17.37, -93.83]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브014.geometry} material={nodes.큐브014.material} position={[-55.67, 17.37, -71.33]} scale={[10, 16.87, 10]} />
            <mesh geometry={nodes.큐브015.geometry} material={nodes.큐브015.material} position={[-63.87, 60.5, 175]} scale={[25, 60, 25]} />
        </group>
    );
}

useGLTF.preload("/untitled.glb");
